/*
 * Generated by ActionName
 * Template path: templates/java/JavaClass.vtl
 */
package com.xyz.system.server;

import java.util.Date;
import java.util.HashSet;
import java.util.Map;
import java.util.Set;

import javax.servlet.http.HttpServletRequest;

import org.apache.geronimo.mail.util.Base64DecoderStream;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Qualifier;
import org.springframework.stereotype.Controller;
import org.springframework.ui.ModelMap;
import org.springframework.web.bind.annotation.RequestMapping;

import com.google.appengine.repackaged.com.google.common.base.StringUtil;
import com.google.appengine.repackaged.com.google.common.util.Base64;
import com.xyz.framework.log.Logger;
import com.xyz.system.model.Authority;
import com.xyz.system.model.Shop;
import com.xyz.system.model.User;
import com.xyz.system.service.ISecurityService;
import com.xyz.system.service.IUserService;

/**
 */
@Controller
public class AuthorizeAction{
	/*
	 *    回调地址: 		http://localhost:8080/zhikebao/authorize
	 *      授权码:        正式环境: http://auth.open.taobao.com/authorize?appkey=12012509
	 * SessionKey:     正式测试环境: http://container.open.taobao.com/container?authcode=TOP-10f9f0ed66d866148fe4da9d150550a904nICvN4lVv0Toh7hr8H4Ubu93DtLGGN-END
	 */
	@Autowired @Qualifier("taobaoUserServ")
	IUserService facade;
	
	@Autowired
	ISecurityService sfacade ;
	/**
	 * 淘宝回调方法,获取SessionKey
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	@RequestMapping("/authorize")
	public String execute(HttpServletRequest request, ModelMap model) 
	{
		boolean isNewUser = false;
		boolean isNewShop = false;
		String sessionKey = request.getParameter("top_session");
		String parameters = request.getParameter("top_parameters");
		String appkey = request.getParameter("top_appkey");
		String nickName = "";
		try {
			
			String params = new String(Base64.decode(parameters),"UTF-8");
			Map pm = StringUtil.string2Map(params, "&", "=", true);
			if(pm!=null&&pm.get("visitor_nick")!=null)
			{
				nickName = pm.get("visitor_nick").toString();
		    }
		} catch (Exception e) {
			Logger.error(getClass(), "不能转换参数串");
			e.printStackTrace();
		}
		Shop shop = facade.findByTbAccount(nickName);
		if(shop==null)
		{   
			isNewShop = true;
			shop = new Shop(appkey,"6b88cd63cbb81b19b014cd5bd8cc418e",true);
		}
		User user = sfacade.findUserByLoginName(nickName);
		//如果用户是从淘宝直接跳转过来，则直接查询是否存在用户
		if(user == null)
		{
			isNewUser = true;
			user = new User(nickName,nickName);
			user.setIsAdmin(true);
			/*
			Md5PasswordEncoder mpe = new Md5PasswordEncoder();
			user.setPassword(mpe.encodePassword(user.getPassword(),null));
			user.setEnabled(true);
			user.setAccountNonExpired(true);
			user.setAccountNonLocked(true);
			user.setCredentialsNonExpired(true);*/
	    	Set<String> ss = new HashSet<String>();
	    	Authority auth1 = sfacade.findAuth("A_ADMIN");
	    	Authority auth2 = sfacade.findAuth("A_USER");
	    	ss.add(auth1.getKey());
	    	ss.add(auth2.getKey());
	    	user.setAuthorityKeys(ss);
		}
		 /*List<User> lu = taobaoUser.getUsers();
		 if(lu == null)
			 lu = new ArrayList<User>();
		 lu.add(user);
		 taobaoUser.setUsers(lu);*/
		 shop.setAppKey(appkey);
		 shop.setTbAccount(nickName)	;
		 shop.setIsAuthorize(true);
		 shop.setAuthorizeTime(new Date());
		 shop.setSessionKey(sessionKey);
		 user.setShop(shop);
		 //获取用户其他信息
		 //facade.findFromTaobao(taobaoUser);
		 if(isNewShop)
		 {
			 facade.saveShop(shop);
			 user.setShopKey(shop.getKey());
			 sfacade.saveUser(user);
		 }else if(isNewUser){
			 facade.update(shop);
			 user.setShopKey(shop.getKey());
			 sfacade.saveUser(user);
		 }else{
			 facade.update(shop);
			 user.setEnabled(true);
			 user.setAccountNonExpired(true);
			 user.setAccountNonLocked(true);
			 user.setCredentialsNonExpired(true);
			 sfacade.update(user);
		 }
		 /*try {
				String url = "http://localhost:8080/j_spring_security_check";
				String params = "?j_username="+nickName+"&j_password="+nickName;
				
				URLFetchService ufs = URLFetchServiceFactory.getURLFetchService();
				URL u= new URL(url+params);
				HTTPRequest req = new HTTPRequest(u,HTTPMethod.POST);
				HTTPResponse res = ufs.fetch(req);
				String result = new String(res.getContent(),"UTF-8");
				
			} catch (Exception e) {
				Logger.error(getClass(), "不能跳转到登录页面");
				e.printStackTrace();
			}*/
	    model.addAttribute("nick", nickName);
	    return "autologin";
	 }
}