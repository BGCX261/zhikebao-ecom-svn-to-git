package com.xyz.system.model;

// Generated 2009-9-14 18:36:13 by Hibernate Tools 3.2.4.GA
import java.util.List;

import javax.persistence.Basic;
import javax.persistence.CascadeType;
import javax.persistence.Entity;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.OrderBy;
import javax.persistence.Table;
import javax.persistence.Transient;

import org.hibernate.annotations.Fetch;
import org.hibernate.annotations.FetchMode;

import com.xyz.resources.model.BaseModel;

/**
 * SsAuthority generated by hbm2java
 */
@Entity @Table(name="authorities")
public class Authority extends BaseModel {
	@Basic
	private String role;
	@Basic
    private String displayName;
	@Basic
	private Integer level; //权限级别
	@Transient
	private Boolean isEditable = true;//是否可编辑
	//多对多定义
	@ManyToMany(targetEntity=com.xyz.system.model.User.class)
	//中间表定义,表名采用默认命名规则
	@JoinTable(name = "USER_AUTHS", joinColumns = { @JoinColumn(name = "AUTH_ID") }, inverseJoinColumns = { @JoinColumn(name = "USER_ID") })
	//Fecth策略定义
	@Fetch(FetchMode.SUBSELECT)
	//集合按id排序.
	@OrderBy("pid")
	private List<User> users; //当前权限对应的用户列表

	public List<User> getUsers() {
		return users;
	}

	public void setUsers(List<User> users) {
		this.users = users;
	}
	//多对多定义
	@ManyToMany(targetEntity=com.xyz.system.model.Resource.class,cascade=CascadeType.ALL)
	//中间表定义,表名采用默认命名规则
	@JoinTable(name = "AUTH_RESOURCES", joinColumns = { @JoinColumn(name = "AUTH_ID") }, inverseJoinColumns = { @JoinColumn(name = "RES_ID") })
	//Fecth策略定义
	@Fetch(FetchMode.SUBSELECT)
	//集合按id排序.
	@OrderBy("pid")
	private List<Resource> resources; //当前权限拥有资源的KEY列表

	public Authority() {
	}

	public Authority(String name,String displayName) {
		this.displayName = displayName;
		this.role = name;
	}


	public String getDisplayName() {
		return this.displayName;
	}

	public void setDisplayName(String displayName) {
		this.displayName = displayName;
	}

	public String getAuthority() {
	  return this.role;
	}

	  public int hashCode() {
	        return this.role.hashCode();
	    }

	    public String toString() {
	        return this.role;
	    }

	    public int compareTo(Authority ga) {
	        if (ga != null) {
	            String rhsRole = ga.getAuthority();

	            if (rhsRole == null) {
	                return -1;
	            }

	            return role.compareTo(rhsRole);
	        }
	        return -1;
	    }

		public String getRole() {
			return role;
		}

		public void setRole(String role) {
			this.role = role;
		}
		
		public List<Resource> getResources() {
			return resources;
		}

		public void setResources(List<Resource> resources) {
			this.resources = resources;
		}

		@Override
		public boolean equals(Object obj) {
			if(obj instanceof Authority)
			{
				Authority auth = (Authority)obj;
				if(auth.getRole().equals(this.getRole()))
				   return true;
				else
				   return false;
			}
			return false;
		}

		public Integer getLevel() {
			return level;
		}

		public void setLevel(Integer level) {
			this.level = level;
		}

		public Boolean getIsEditable() {
			return isEditable;
		}

		public void setIsEditable(Boolean isEditable) {
			this.isEditable = isEditable;
		}

	
}
