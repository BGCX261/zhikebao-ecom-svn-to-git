<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:oxm="http://www.springframework.org/schema/oxm" xmlns:task="http://www.springframework.org/schema/task"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
				http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
				http://www.springframework.org/schema/oxm http://www.springframework.org/schema/oxm/spring-oxm-3.0.xsd
				http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-3.0.xsd
				http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
				http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd"
	default-autowire="byType">
	<context:annotation-config />
	<context:component-scan base-package="com.xyz">
	   <context:include-filter type="regex" expression=".*.service.impl.*"/>
	</context:component-scan>
	<!-- 配置Jpa持久化工厂   -->
	<bean id="entityManagerFactory"        
		class="org.springframework.orm.jpa.LocalEntityManagerFactoryBean">
        <property name="persistenceUnitName" value="transactions-optional"></property>
	</bean>
	<bean name="jpaTxManager" class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="entityManagerFactory" />
	</bean>
	<bean
        id="org.springframework.context.annotation.internalPersistenceAnnotationProcessor"
        class="java.lang.String" /> 
        
	<tx:annotation-driven transaction-manager="jpaTxManager" />
	    <bean class="org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor">
        <property name="defaultPersistenceUnitName" value="transactions-optional"></property>
    </bean>
  
 
	<!-- EhCache缓存配置 -->
	<!-- 缓存实现管理器-->
	<bean id="cacheManager"
		class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean">
		<property name="configLocation" value="classpath:ehcache.xml"></property>
	</bean>

	<!-- 缓存统一接口 -->
	<bean id="cacheProviderFacade" class="org.springmodules.cache.provider.ehcache.EhCacheFacade">
		<property name="cacheManager" ref="cacheManager" />
	</bean>

	<!--
		task:annotation-driven executor="myExecutor" scheduler="myScheduler"/>
		<task:executor id="myExecutor" pool-size="5"/> <task:scheduler
		id="myScheduler" pool-size="10"/>
	-->
	
    <bean id="pojoStore"
		class="net.sf.gilead.core.store.stateless.StatelessProxyStore"/>
	
	<bean id="hibernateJpaUtil"
		class="net.sf.gilead.core.hibernate.jpa.HibernateJpaUtil">
		<property name="entityManagerFactory" ref="entityManagerFactory"/>
	</bean>

	<bean id="hibernateBeanManager"
		class="net.sf.gilead.core.PersistentBeanManager">
		<property name="proxyStore" ref="pojoStore" />
		<property name="persistenceUtil" ref="hibernateJpaUtil"/>
		<!-- Use with dynamic proxy mode 
		<property name="classMapper" ref="ClassMapper"/>#
		 -->
	</bean>
	
	<!--
	Setup transaction handling 
	 -->
	 <aop:config>
		<aop:pointcut id="hb4GwtInvocation"
                    expression="execution(* org.gwtwidgets.server.spring.gilead.GileadRPCServiceExporter.invokeMethodOnService(..))"/>
		<aop:advisor pointcut-ref="hb4GwtInvocation" advice-ref="defaultTxAdvice"/>
	 </aop:config>
	
	<tx:advice id="defaultTxAdvice" transaction-manager="jpaTxManager">
        <tx:attributes>
            <tx:method name="*"/>
        </tx:attributes>
    </tx:advice>
	
</beans>
